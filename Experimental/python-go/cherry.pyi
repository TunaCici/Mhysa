# cherry.pyi
"""
A stub definition (.pyi) for the built-in Python module 'cherry' implemented in C.
"""

# Constants
DEFAULT_TIMEOUT: int
MAX_CONNECTIONS: int

# Functions
def connect(host: str, port: int, timeout: float = ...) -> bool: ...
def disconnect() -> None: ...
def send_message(data: bytes) -> int: ...
def receive_message(buffer_size: int = ...) -> bytes: ...
def get_last_error() -> str: ...

# Exception classes
class ConnectionError(Exception): ...
class TimeoutError(ConnectionError): ...

# A typical class
class Session:
    session_id: int
    user: str
    password: str
    active: bool

    def __init__(self, user: str, password: str, *, active: bool = ...) -> None: ...

    def start(self) -> bool: ...
    def stop(self) -> None: ...
    def is_active(self) -> bool: ...

    def send(self, data: bytes) -> int: ...
    def receive(self, buffer_size: int = ...) -> bytes: ...

# Enums (Python 3.4+ style)
from enum import Enum

class LogLevel(Enum):
    DEBUG: int
    INFO: int
    WARNING: int
    ERROR: int
    CRITICAL: int

def set_log_level(level: LogLevel) -> None: ...
def get_log_level() -> LogLevel: ...